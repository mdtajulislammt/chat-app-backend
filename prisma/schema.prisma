// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  password   String
  avatar     String?   // optional user profile image
  status     String?   // optional: "online" / "offline"
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // Relations
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  status     String   @default("sent") // "sent", "delivered", "read"
  roomId     String?  // for group chats
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  senderId   Int
  sender     User     @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  
  receiverId Int?
  receiver   User?    @relation("ReceivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
}


